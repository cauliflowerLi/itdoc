"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[198],{773:(e,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>d});var n=a(641);const l=[(0,n.Fv)('<h1 id="编程规约" tabindex="-1"><a class="header-anchor" href="#编程规约"><span>编程规约</span></a></h1><h2 id="命名规范" tabindex="-1"><a class="header-anchor" href="#命名规范"><span>命名规范</span></a></h2><h3 id="_1-1-1-项目命名【强制】" tabindex="-1"><a class="header-anchor" href="#_1-1-1-项目命名【强制】"><span>1.1.1 项目命名【强制】</span></a></h3><p>全部采用小写方式，以中线分隔。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例：mall-management-system</span>\n<span class="line">反例：mall_management-system / mallManagementSystem</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-2-目录命名【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-1-2-目录命名【推荐】"><span>1.1.2 目录命名【推荐】</span></a></h3><p>全部采用小写方式， 以中划线分隔，有复数结构时，要采用复数命名法， 缩写不用复数。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例： scripts / styles / components / images / utils / layouts / demo-styles / demo-scripts / img / doc</span>\n<span class="line">反例： script / style / demo_scripts / demoStyles / imgs / docs</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>【特殊】VUE 的项目中的 components 中的组件目录，使用 kebab-case 命名。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例： head-search / page-loading / authorized / notice-icon</span>\n<span class="line">反例： HeadSearch / PageLoading</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>【特殊】VUE 的项目中的除 components 组件目录外的所有目录也使用 kebab-case 命名。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例： page-one / shopping-car / user-management</span>\n<span class="line">反例： ShoppingCar / UserManagement</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-3-js、css、scss、html、png-文件命名【强制】" tabindex="-1"><a class="header-anchor" href="#_1-1-3-js、css、scss、html、png-文件命名【强制】"><span>1.1.3 JS、CSS、SCSS、HTML、PNG 文件命名【强制】</span></a></h3><p>全部采用小写方式，以中划线分隔。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例： render-dom.js / signup.css / index.html / company-logo.png</span>\n<span class="line">反例： renderDom.js / UserManagement.html</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-4-命名严谨性【强制】" tabindex="-1"><a class="header-anchor" href="#_1-1-4-命名严谨性【强制】"><span>1.1.4 命名严谨性【强制】</span></a></h3><p>代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。 说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式也要避免采用。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例：henan / luoyang / rmb 等国际通用的名称，可视同英文</span>\n<span class="line">反例：DaZhePromotion [打折] / getPingfenByName[评分] /  int 某变量 = 3</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>杜绝完全不规范的缩写，避免望文不知义：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">反例：AbstractClass “缩写”命名成 AbsClass；condition “缩写”命名成 condi，此类随意缩写严重降低代码可阅读性。</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="html规范" tabindex="-1"><a class="header-anchor" href="#html规范"><span>HTML规范</span></a></h2><h3 id="_1-2-1-html类型【强制】" tabindex="-1"><a class="header-anchor" href="#_1-2-1-html类型【强制】"><span>1.2.1 HTML类型【强制】</span></a></h3><p>推荐使用 HTML5 的文档类型申明： （ 建议使用 text/html 格式的 HTML 。避免使用 XHTML 。XHTML 以及它的属性， 比如application/xhtml+xml 在浏览器中的应用支持与优化空间都十分有限）。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">&lt;!DOCTYPE html&gt;</span>\n<span class="line">&lt;html&gt;</span>\n<span class="line">    &lt;head&gt;</span>\n<span class="line">        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot; /&gt;</span>\n<span class="line">        &lt;meta charset=&quot;UTF-8&quot; /&gt;</span>\n<span class="line">        &lt;title&gt;Page title&lt;/title&gt;</span>\n<span class="line">    &lt;/head&gt;</span>\n<span class="line">    &lt;body&gt;</span>\n<span class="line">        &lt;img src=&quot;images/company-logo.png&quot; alt=&quot;Company&quot;&gt;</span>\n<span class="line">    &lt;/body&gt;</span>\n<span class="line">&lt;/html&gt;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-2-缩进【强制】" tabindex="-1"><a class="header-anchor" href="#_1-2-2-缩进【强制】"><span>1.2.2 缩进【强制】</span></a></h3><p>缩进使用 2 个空格（一个 tab）； 嵌套的节点应该缩进。</p><h3 id="_1-2-3-分块注释【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-2-3-分块注释【推荐】"><span>1.2.3 分块注释【推荐】</span></a></h3><p>在块状元素，列表元素和表格元素后，加上一对 HTML 注释。</p><h3 id="_1-2-4-语义化标签【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-2-4-语义化标签【推荐】"><span>1.2.4 语义化标签【推荐】</span></a></h3><p>HTML5 中新增很多语义化标签，所以优先使用语义化标签，避免一个页面都是 div 或者 p 标签。</p><h5 id="正例" tabindex="-1"><a class="header-anchor" href="#正例"><span>正例</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">&lt;header&gt;&lt;/header&gt;</span>\n<span class="line">&lt;footer&gt;&lt;/footer&gt;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="反例" tabindex="-1"><a class="header-anchor" href="#反例"><span>反例</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">&lt;div&gt;</span>\n<span class="line">    &lt;p&gt;&lt;/p&gt;</span>\n<span class="line">&lt;/div&gt;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-5-引号【强制】" tabindex="-1"><a class="header-anchor" href="#_1-2-5-引号【强制】"><span>1.2.5 引号【强制】</span></a></h3><p>HTML5 中使用双引号”” 而不是’’。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例：&lt;div class=”box”&gt;&lt;/div&gt;</span>\n<span class="line">反例：&lt;div class=’box’&gt;&lt;/div&gt;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css-规范" tabindex="-1"><a class="header-anchor" href="#css-规范"><span>CSS 规范</span></a></h2><h3 id="_1-3-1-命名【强制】" tabindex="-1"><a class="header-anchor" href="#_1-3-1-命名【强制】"><span>1.3.1 命名【强制】</span></a></h3><ul><li>类名使用小写字母，以中划线分隔</li><li>id 采用驼峰式命名</li><li>scss 中的变量、函数、混合、placeholder 采用驼峰式命名</li><li>ID 和 class 的名称总是使用可以反应元素目的和用途的名称，或其他通用的名称，代替表象和晦涩难懂的名称。</li></ul><h5 id="不推荐" tabindex="-1"><a class="header-anchor" href="#不推荐"><span>不推荐：</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">.fw-800 {</span>\n<span class="line">    font-weight: 800;</span>\n<span class="line">}</span>\n<span class="line">.red {</span>\n<span class="line">    color: red;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="推荐" tabindex="-1"><a class="header-anchor" href="#推荐"><span>推荐:</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">.heavy {</span>\n<span class="line">    font-weight: 800;</span>\n<span class="line">}</span>\n<span class="line">.important { </span>\n<span class="line">    color: red;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-2-选择器【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-3-2-选择器【推荐】"><span>1.3.2 选择器【推荐】</span></a></h3><h4 id="_1-css-选择器中避免使用标签名" tabindex="-1"><a class="header-anchor" href="#_1-css-选择器中避免使用标签名"><span>1.css 选择器中避免使用标签名</span></a></h4><p>从结构、表现、行为分离的原则来看，应该尽量避免 css 中出现 HTML 标签，并且在 css 选择器中出现标签名会存在潜在的问题。</p><h4 id="_2-使用直接子选择器" tabindex="-1"><a class="header-anchor" href="#_2-使用直接子选择器"><span>2.使用直接子选择器</span></a></h4><p>很多前端开发人员写选择器链的时候不使用 直接子选择器（注：直接子选择器和后代选择器的区别）。有时，这可能会导致疼痛的设计问题并且有时候可能会很耗性能。然而，在任何情况下，这是一个非常不好的做法。如果你不写很通用的，需要匹配到 DOM 末端的选择器， 你应该总是考虑直接子选择器。</p><h6 id="不推荐-1" tabindex="-1"><a class="header-anchor" href="#不推荐-1"><span>不推荐:</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">.content .title { </span>\n<span class="line">    font-size: 2rem;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="推荐-1" tabindex="-1"><a class="header-anchor" href="#推荐-1"><span>推荐:</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">.content &gt; .title { </span>\n<span class="line">    font-size: 2rem;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-3-尽量使用缩写属性【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-3-3-尽量使用缩写属性【推荐】"><span>1.3.3 尽量使用缩写属性【推荐】</span></a></h3><h6 id="不推荐-2" tabindex="-1"><a class="header-anchor" href="#不推荐-2"><span>不推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">border-top-style: none;</span>\n<span class="line">font-family: palatino, georgia, serif; </span>\n<span class="line">font-size: 100%;</span>\n<span class="line">line-height: 1.6; </span>\n<span class="line">padding-bottom: 2em; </span>\n<span class="line">padding-left: 1em; </span>\n<span class="line">padding-right: 1em;</span>\n<span class="line">padding-top: 0;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="推荐-2" tabindex="-1"><a class="header-anchor" href="#推荐-2"><span>推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">border-top: 0;</span>\n<span class="line">font: 100%/1.6 palatino, georgia, serif; </span>\n<span class="line">padding: 0 1em 2em;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-4-每个选择器及属性独占一行【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-3-4-每个选择器及属性独占一行【推荐】"><span>1.3.4 每个选择器及属性独占一行【推荐】</span></a></h3><h6 id="不推荐-3" tabindex="-1"><a class="header-anchor" href="#不推荐-3"><span>不推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">button{  widht: 100px;  height: 50px;  color:#fff;  background:  #00a0e9 }</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h6 id="推荐-3" tabindex="-1"><a class="header-anchor" href="#推荐-3"><span>推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">button {</span>\n<span class="line">    width: 100px;</span>\n<span class="line">    height: 50px; </span>\n<span class="line">    color: fff;</span>\n<span class="line">    background: #00a0e9;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-5-省略-0-后面的单位【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-3-5-省略-0-后面的单位【推荐】"><span>1.3.5 省略 0 后面的单位【推荐】</span></a></h3><h6 id="不推荐-4" tabindex="-1"><a class="header-anchor" href="#不推荐-4"><span>不推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">div {</span>\n<span class="line">    padding-bottom: 0px; </span>\n<span class="line">    margin: 0em;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="推荐-4" tabindex="-1"><a class="header-anchor" href="#推荐-4"><span>推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">div {</span>\n<span class="line">    padding-bottom: 0;</span>\n<span class="line">    margin: 0;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-6-避免使用-id-选择器及全局标签选择器防止污染全局样式【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-3-6-避免使用-id-选择器及全局标签选择器防止污染全局样式【推荐】"><span>1.3.6 避免使用 ID 选择器及全局标签选择器防止污染全局样式【推荐】</span></a></h3><h6 id="不推荐-5" tabindex="-1"><a class="header-anchor" href="#不推荐-5"><span>不推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">#header {</span>\n<span class="line">    padding-bottom: 0px; </span>\n<span class="line">    margin: 0em;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="推荐-5" tabindex="-1"><a class="header-anchor" href="#推荐-5"><span>推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">.header {</span>\n<span class="line">    padding-bottom: 0px; </span>\n<span class="line">    margin: 0em;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="less-规范" tabindex="-1"><a class="header-anchor" href="#less-规范"><span>LESS 规范</span></a></h2><h3 id="_1-4-1-代码组织【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-4-1-代码组织【推荐】"><span>1.4.1 代码组织【推荐】</span></a></h3><p>将公共less 文件放置在 style/less/common 文件夹</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例: // color.less,common.less</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-4-2-按以下顺序组织【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-4-2-按以下顺序组织【推荐】"><span>1.4.2 按以下顺序组织【推荐】</span></a></h3><ol><li>Import;</li><li>变量声明；</li><li>样式声明；</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">@import &quot;mixins/size.less&quot;; </span>\n<span class="line">@default-text-color: #333;</span>\n<span class="line">.page {</span>\n<span class="line">    width: 960px; </span>\n<span class="line">    margin: 0 auto;</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-3-避免嵌套层级过多【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-4-3-避免嵌套层级过多【推荐】"><span>1.4.3 避免嵌套层级过多【推荐】</span></a></h3><p>将嵌套深度限制在 3 级。对于超过 4 级的嵌套，给予重新评估。这可以避免出现过于详实的 CSS选择器。避免大量的嵌套规则。当可读性受到影响时，将之打断。推荐避免出现多于 20 行的嵌套规则出现。</p><h6 id="不推荐-6" tabindex="-1"><a class="header-anchor" href="#不推荐-6"><span>不推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">.main {</span>\n<span class="line">    .title {</span>\n<span class="line">        .name {</span>\n<span class="line">            color: #fff;</span>\n<span class="line">        }</span>\n<span class="line">    }</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="推荐-6" tabindex="-1"><a class="header-anchor" href="#推荐-6"><span>推荐：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">.main-title {</span>\n<span class="line">    .name {</span>\n<span class="line">        color: #fff;</span>\n<span class="line">    }</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript-规范" tabindex="-1"><a class="header-anchor" href="#javascript-规范"><span>Javascript 规范</span></a></h2><h3 id="_1-5-1-命名" tabindex="-1"><a class="header-anchor" href="#_1-5-1-命名"><span>1.5.1 命名</span></a></h3><ol><li>采用小写驼峰命名 lowerCamelCase，代码中的命名均不能以下划线开始， 也不能以下划线或美元符号结束【强制】</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">反例： _name / name_ / name$</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从驼峰形式【强制】</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例： localValue / getHttpMessage() </span>\n<span class="line">反例：save / open / show / go</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚， 不要嫌名字长 【推荐】</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例： MAX_STOCK_COUNT</span>\n<span class="line">反例： MAX_COUNT</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-2-代码格式" tabindex="-1"><a class="header-anchor" href="#_1-5-2-代码格式"><span>1.5.2 代码格式</span></a></h3><ol><li>使用 2 个空格进行缩进【强制】</li><li>不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性【推荐】 说明：任何情形，没有必要插入多个空行进行隔开。</li></ol><h3 id="_1-5-3-字符串【强制】" tabindex="-1"><a class="header-anchor" href="#_1-5-3-字符串【强制】"><span>1.5.3 字符串【强制】</span></a></h3><p>统一使用单引号(‘)，不使用双引号(“)。这在建 HTML 字符串非常有好处：</p><h6 id="正例-1" tabindex="-1"><a class="header-anchor" href="#正例-1"><span>正例:</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">let str = &#39;foo&#39;;</span>\n<span class="line">let testDiv = &#39;&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;&#39;;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="反例-1" tabindex="-1"><a class="header-anchor" href="#反例-1"><span>反例:</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">let str = &#39;foo&#39;;</span>\n<span class="line">let testDiv = &quot;&lt;div id=&#39;test&#39;&gt;&lt;/div&gt;&quot;;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-4-使用字面值创建对象【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-5-4-使用字面值创建对象【推荐】"><span>1.5.4 使用字面值创建对象【推荐】</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">正例：let user = {};</span>\n<span class="line">反例：let user = new Object();</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-5-使用-es6-【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-5-5-使用-es6-【推荐】"><span>1.5.5 使用 ES6+【推荐】</span></a></h3><p>必须优先使用 ES6+ 中新增的语法糖和函数。这将简化你的程序，并让你的代码更加灵活和可复用。比如箭头函数、await/async ， 解构， let ， for…of 等等。</p><h3 id="_1-5-6-括号【强制】" tabindex="-1"><a class="header-anchor" href="#_1-5-6-括号【强制】"><span>1.5.6 括号【强制】</span></a></h3><p>下列关键字后必须有大括号（即使代码块的内容只有一行）：if, else, for, while, do, switch, try, catch, finally, with。</p><h6 id="反例-2" tabindex="-1"><a class="header-anchor" href="#反例-2"><span>反例：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">if (condition) doSomething();</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-5-7-undefined-判断【强制】" tabindex="-1"><a class="header-anchor" href="#_1-5-7-undefined-判断【强制】"><span>1.5.7 undefined 判断【强制】</span></a></h3><p>永远不要直接使用 undefined 进行变量判断；使用 typeof 和字符串’undefined’对变量进行判断。</p><h6 id="正例-2" tabindex="-1"><a class="header-anchor" href="#正例-2"><span>正例：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">if (typeof person === &#39;undefined&#39;) {</span>\n<span class="line">...</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="反例-3" tabindex="-1"><a class="header-anchor" href="#反例-3"><span>反例：</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">if (person === undefined) {</span>\n<span class="line">...</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-8-条件判断和循环最多三层【强制】" tabindex="-1"><a class="header-anchor" href="#_1-5-8-条件判断和循环最多三层【强制】"><span>1.5.8 条件判断和循环最多三层【强制】</span></a></h3><p>条件判断能使用三目运算符和逻辑运算符解决的，就不要使用条件判断，但是谨记不要写太长的 三目运算符。如果超过 3 层请抽成函数，并写清楚注释。</p><h3 id="_1-5-9-this-的转换命名【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-5-9-this-的转换命名【推荐】"><span>1.5.9 this 的转换命名【推荐】</span></a></h3><p>对上下文 this 的引用只能使用 ’self’ 来命名。</p><h3 id="_1-5-10-慎用-console-log【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-5-10-慎用-console-log【推荐】"><span>1.5.10 慎用 console.log【推荐】</span></a></h3><p>因 console.log 大量使用会有性能问题，所以在非 webpack 项目中谨慎使用 log 功能。</p>',122)],i={},t=(0,a(262).A)(i,[["render",function(e,s){return(0,n.uX)(),(0,n.CE)("div",null,l)}]]),d=JSON.parse('{"path":"/%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.html","title":"编程规约","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"命名规范","slug":"命名规范","link":"#命名规范","children":[{"level":3,"title":"1.1.1 项目命名【强制】","slug":"_1-1-1-项目命名【强制】","link":"#_1-1-1-项目命名【强制】","children":[]},{"level":3,"title":"1.1.2 目录命名【推荐】","slug":"_1-1-2-目录命名【推荐】","link":"#_1-1-2-目录命名【推荐】","children":[]},{"level":3,"title":"1.1.3 JS、CSS、SCSS、HTML、PNG 文件命名【强制】","slug":"_1-1-3-js、css、scss、html、png-文件命名【强制】","link":"#_1-1-3-js、css、scss、html、png-文件命名【强制】","children":[]},{"level":3,"title":"1.1.4 命名严谨性【强制】","slug":"_1-1-4-命名严谨性【强制】","link":"#_1-1-4-命名严谨性【强制】","children":[]}]},{"level":2,"title":"HTML规范","slug":"html规范","link":"#html规范","children":[{"level":3,"title":"1.2.1 HTML类型【强制】","slug":"_1-2-1-html类型【强制】","link":"#_1-2-1-html类型【强制】","children":[]},{"level":3,"title":"1.2.2 缩进【强制】","slug":"_1-2-2-缩进【强制】","link":"#_1-2-2-缩进【强制】","children":[]},{"level":3,"title":"1.2.3 分块注释【推荐】","slug":"_1-2-3-分块注释【推荐】","link":"#_1-2-3-分块注释【推荐】","children":[]},{"level":3,"title":"1.2.4 语义化标签【推荐】","slug":"_1-2-4-语义化标签【推荐】","link":"#_1-2-4-语义化标签【推荐】","children":[]},{"level":3,"title":"1.2.5 引号【强制】","slug":"_1-2-5-引号【强制】","link":"#_1-2-5-引号【强制】","children":[]}]},{"level":2,"title":"CSS 规范","slug":"css-规范","link":"#css-规范","children":[{"level":3,"title":"1.3.1 命名【强制】","slug":"_1-3-1-命名【强制】","link":"#_1-3-1-命名【强制】","children":[]},{"level":3,"title":"1.3.2 选择器【推荐】","slug":"_1-3-2-选择器【推荐】","link":"#_1-3-2-选择器【推荐】","children":[]},{"level":3,"title":"1.3.3 尽量使用缩写属性【推荐】","slug":"_1-3-3-尽量使用缩写属性【推荐】","link":"#_1-3-3-尽量使用缩写属性【推荐】","children":[]},{"level":3,"title":"1.3.4 每个选择器及属性独占一行【推荐】","slug":"_1-3-4-每个选择器及属性独占一行【推荐】","link":"#_1-3-4-每个选择器及属性独占一行【推荐】","children":[]},{"level":3,"title":"1.3.5 省略 0 后面的单位【推荐】","slug":"_1-3-5-省略-0-后面的单位【推荐】","link":"#_1-3-5-省略-0-后面的单位【推荐】","children":[]},{"level":3,"title":"1.3.6 避免使用 ID 选择器及全局标签选择器防止污染全局样式【推荐】","slug":"_1-3-6-避免使用-id-选择器及全局标签选择器防止污染全局样式【推荐】","link":"#_1-3-6-避免使用-id-选择器及全局标签选择器防止污染全局样式【推荐】","children":[]}]},{"level":2,"title":"LESS 规范","slug":"less-规范","link":"#less-规范","children":[{"level":3,"title":"1.4.1 代码组织【推荐】","slug":"_1-4-1-代码组织【推荐】","link":"#_1-4-1-代码组织【推荐】","children":[]},{"level":3,"title":"1.4.2 按以下顺序组织【推荐】","slug":"_1-4-2-按以下顺序组织【推荐】","link":"#_1-4-2-按以下顺序组织【推荐】","children":[]},{"level":3,"title":"1.4.3 避免嵌套层级过多【推荐】","slug":"_1-4-3-避免嵌套层级过多【推荐】","link":"#_1-4-3-避免嵌套层级过多【推荐】","children":[]}]},{"level":2,"title":"Javascript 规范","slug":"javascript-规范","link":"#javascript-规范","children":[{"level":3,"title":"1.5.1 命名","slug":"_1-5-1-命名","link":"#_1-5-1-命名","children":[]},{"level":3,"title":"1.5.2 代码格式","slug":"_1-5-2-代码格式","link":"#_1-5-2-代码格式","children":[]},{"level":3,"title":"1.5.3 字符串【强制】","slug":"_1-5-3-字符串【强制】","link":"#_1-5-3-字符串【强制】","children":[]},{"level":3,"title":"1.5.4 使用字面值创建对象【推荐】","slug":"_1-5-4-使用字面值创建对象【推荐】","link":"#_1-5-4-使用字面值创建对象【推荐】","children":[]},{"level":3,"title":"1.5.5 使用 ES6+【推荐】","slug":"_1-5-5-使用-es6-【推荐】","link":"#_1-5-5-使用-es6-【推荐】","children":[]},{"level":3,"title":"1.5.6 括号【强制】","slug":"_1-5-6-括号【强制】","link":"#_1-5-6-括号【强制】","children":[]},{"level":3,"title":"1.5.7 undefined 判断【强制】","slug":"_1-5-7-undefined-判断【强制】","link":"#_1-5-7-undefined-判断【强制】","children":[]},{"level":3,"title":"1.5.8 条件判断和循环最多三层【强制】","slug":"_1-5-8-条件判断和循环最多三层【强制】","link":"#_1-5-8-条件判断和循环最多三层【强制】","children":[]},{"level":3,"title":"1.5.9 this 的转换命名【推荐】","slug":"_1-5-9-this-的转换命名【推荐】","link":"#_1-5-9-this-的转换命名【推荐】","children":[]},{"level":3,"title":"1.5.10 慎用 console.log【推荐】","slug":"_1-5-10-慎用-console-log【推荐】","link":"#_1-5-10-慎用-console-log【推荐】","children":[]}]}],"git":{},"filePathRelative":"开发规范.md"}')}}]);